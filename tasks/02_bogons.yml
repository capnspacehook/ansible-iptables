---

- name: "Set bogon IPs"
  set_fact:
    bogon_ips: "{{ query('url', lookup('vars', 'bogon_list_url')) }}"
  when: iptables_block_bogons | bool

- name: "Unset bogon IPs"
  set_fact:
    bogon_ips: []
  when: not iptables_block_bogons

- name: Firewall rule - create bogon chains
  iptables_raw:
    name: create-bogons-chains
    state: "{{ (iptables_block_bogons | bool) | ternary('present', 'absent') }}"
    weight: 17
    rules: |
      -N {{ bogons_inbound_chain }}
      -N {{ bogons_outbound_chain }}
  notify: Persist rules

- name: Create bogon logging chains
  include_tasks: log_chain.yml
  loop:
    - name: bogons-inbound-drop-chain
      rule_name: logging-bogons-inbound-drop-chain
      state: "{{ (iptables_block_bogons | bool) | ternary('present', 'absent') }}"
      chain_name: "{{ bogons_inbound_log_chain }}"
      prefix: "BOGON:INPUT:DROP:"
      action: DROP
    - name: bogons-outbound-drop-chain
      rule_name: logging-bogons-outbound-drop-chain
      state: "{{ (iptables_block_bogons | bool) | ternary('present', 'absent') }}"
      chain_name: "{{ bogons_outbound_log_chain }}"
      prefix: "BOGON:OUTPUT:DROP:"
      action: DROP
  loop_control:
    loop_var: log_rule

- name: Block all traffic involving bogons
  include_tasks: create_lists.yml
  loop:
    - name: bogons
      match_blocked: true
      filter_inbound: "{{ iptables_block_bogons | bool }}"
      filter_outbound: "{{ iptables_block_bogons | bool }}"
      weight: 17
      allowed: []
      blocked: "{{ bogon_ips }}"
      inbound_chain: "{{ bogons_inbound_chain }}"
      outbound_chain: "{{ bogons_outbound_chain }}"
      allowed_inbound_target: ""
      allowed_outbound_target: ""
      blocked_inbound_target: "{{ bogons_inbound_log_chain }}"
      blocked_outbound_target: "{{ bogons_outbound_log_chain }}"
  loop_control:
    loop_var: list