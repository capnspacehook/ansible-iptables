---

- name: Set {{ item.name }} chain names
  set_fact:
    current_input_chain: "{{ item.name | upper }}_IN"
    current_output_chain: "{{ item.name | upper }}_OUT"
    current_output_user_chain: "{{ item.name | upper }}_USER_LIST"
    current_input_list_chain: "{{ item.name | upper }}_IN_LIST"
    current_output_list_chain: "{{ item.name | upper }}_OUT_LIST"
    current_input_accept_log_chain: "{{ item.name | upper }}_IN_ACCEPT_LOG"
    current_output_accept_log_chain: "{{ item.name | upper }}_OUT_ACCEPT_LOG"

- name: Firewall rule - allow {{ item.name }} inbound
  iptables_raw:
    name: "allow-{{ item.name }}-inbound"
    state: "{{ ((item.state == 'present') and (item.allow_inbound | bool)) | ternary('present', 'absent') }}"
    weight: "{{ item.weight }}"
    rules: |
      -N {{ current_input_chain }}
      -A INPUT -p {{ item.proto }} --dport {{ item.inbound_port }} -j {{ current_input_chain }}
      -A {{ current_input_chain }} -m state --state ESTABLISHED,RELATED -j ACCEPT
      -A OUTPUT -p {{ item.proto }} --sport {{ item.inbound_port }} -m state --state ESTABLISHED,RELATED -j ACCEPT
  notify: Persist rules

- name: Firewall rule - allow {{ item.name }} outbound
  iptables_raw:
    name: "allow-{{ item.name }}-outbound"
    state: "{{ ((item.state == 'present') and (item.allow_outbound | bool)) | ternary('present', 'absent') }}"
    weight: "{{ item.weight }}"
    rules: |
      -N {{ current_output_chain }}
      -A {{ item.root_chain }} -j {{ current_output_chain }}
  notify: Persist rules

- name: Create {{ item.name }} logging chains
  include_tasks: log_chain.yml
  loop:
    - name: "{{ item.name }}-outbound-accept-chain"
      rule_name: "logging-{{ item.name }}-outbound-accept-chain"
      state: "{{ (item.allow_outbound | bool) | ternary('present', 'absent') }}"
      chain_name: "{{ current_output_accept_log_chain }}"
      prefix: "{{ item.name | upper }}:OUTPUT:ACCEPT:"
      action: ACCEPT
    - name: "{{ item.name }}-inbound-accept-chain"
      rule_name: "logging-{{ item.name }}-inbound-accept-chain"
      state: "{{ (item.allow_inbound | bool) | ternary('present', 'absent') }}"
      chain_name: "{{ current_input_accept_log_chain }}"
      prefix: "{{ item.name | upper }}:INPUT:ACCEPT:"
      action: ACCEPT
  loop_control:
    loop_var: log_rule

- name: Firewall rule - create {{ item.name }} inbound IP chain if IP filtering is enabled
  iptables_raw:
    name: "create-{{ item.name }}-inbound-list-chain"
    state: "{{ ((item.state == 'present') and (item.allow_inbound | bool) and ((item.allowed | length > 0) or (item.blocked | length > 0))) | ternary('present', 'absent') }}"
    weight: "{{ item.weight }}"
    rules: |
      -N {{ current_input_list_chain }}
  notify: Persist rules

- name: Set inbound {{ item.name }} chains if IP filtering is disabled
  set_fact:
    current_input_list_chain: "{{ current_input_accept_log_chain }}"
  when: (item.allowed | length == 0) and (item.blocked | length == 0)

- name: Firewall rule - create {{ item.name }} outbound IP chain if IP filtering is enabled
  iptables_raw:
    name: "create-{{ item.name }}-outbound-list-chain"
    state: "{{ ((item.state == 'present') and (item.allow_outbound | bool) and ((item.allowed | length > 0) or (item.blocked | length > 0))) | ternary('present', 'absent') }}"
    weight: "{{ item.weight }}"
    rules: |
      -N {{ current_output_list_chain }}
  notify: Persist rules

- name: Set outbound {{ item.name }} chains if IP filtering is disabled
  set_fact:
    current_output_list_chain: "{{ current_output_accept_log_chain }}"
  when: (item.allowed | length == 0) and (item.blocked | length == 0)

- name: Firewall rule - log new {{ item.name }} inbound traffic or filter by IP
  iptables_raw:
    name: "filter-{{ item.name }}-new-inbound-list"
    state: "{{ ((item.state == 'present') and (item.allow_inbound | bool)) | ternary('present', 'absent') }}"
    weight: "{{ item.weight }}"
    rules: |
      -A {{ current_input_chain }} -j {{ current_input_list_chain }}
  loop: "{{ item.users }}"
  loop_control:
    loop_var: user
  notify: Persist rules

- name: Firewall rule - filter new outbound {{ item.name }} traffic by user if user filtering is enabled
  iptables_raw:
    name: "filter-{{ item.name }}-new-outbound-user-{{ user }}"
    state: "{{ ((item.state == 'present') and (item.allow_outbound | bool) and (item.users | length > 0)) | ternary('present', 'absent') }}"
    weight: "{{ item.weight }}"
    rules: |
      -A {{ current_output_chain }} -m owner --uid-owner {{ user }} -j {{ current_output_list_chain }}
  loop: "{{ item.users }}"
  loop_control:
    loop_var: user
  notify: Persist rules

- name: Create {{ item.name }} IP allow or block filter rules
  include_tasks: create_lists.yml
  loop:
    - name: "{{ item.name }}"
      match_blocked: false
      filter_inbound: "{{ item.allow_inbound | bool }}"
      filter_outbound: "{{ item.allow_outbound | bool }}"
      weight: "{{ item.weight }}"
      allowed: "{{ item.allowed }}"
      blocked: "{{ item.blocked }}"
      inbound_chain: "{{ current_input_list_chain }}"
      outbound_chain: "{{ current_output_list_chain }}"
      allowed_inbound_target: "{{ current_input_accept_log_chain }}"
      allowed_outbound_target: "{{ current_output_accept_log_chain }}"
      blocked_inbound_target: "{{ current_input_accept_log_chain }}"
      blocked_outbound_target: "{{ current_output_accept_log_chain }}"
  loop_control:
    loop_var: list

- name: Firewall rule - allow TCP to close connections for {{ item.name }} outbound traffic if user filtering is enabled
  iptables_raw:
    name: "allow-{{ item.name }}-outbound-closed"
    state: "{{ ((item.state == 'present') and (item.allow_outbound | bool) and (item.users | length > 0) and (item.proto | lower == 'tcp')) | ternary('present', 'absent') }}"
    weight: "{{ item.weight | int + 1 }}"
    rules: |
      -A {{ current_output_chain }} -m owner ! --socket-exists -j ACCEPT
  notify: Persist rules

- name: Firewall rule - log new {{ item.name }} outbound traffic or filter by IP if user filtering is disabled
  iptables_raw:
    name: "log-{{ item.name }}-oubound-accepted"
    state: "{{ ((item.state == 'present') and (item.allow_outbound | bool) and (item.users | length == 0)) | ternary('present', 'absent') }}"
    weight: "{{ item.weight }}"
    rules: |
      -A {{ current_output_chain }} -j {{ current_output_list_chain }}
  notify: Persist rules