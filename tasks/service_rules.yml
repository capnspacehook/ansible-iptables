---

- name: "Set {{ item.name }} chain names"
  set_fact:
    current_output_established_chain: "{{ item.name | upper }}_EST_OUTPUT"
    current_output_new_chain: "{{ item.name | upper }}_NEW_OUTPUT"
    current_input_accept_log_chain: "{{ item.name | upper }}_INPUT_ACCEPT_LOG"
    current_output_accept_log_chain: "{{ item.name | upper }}_OUTPUT_ACCEPT_LOG"
    current_output_drop_log_chain: "{{ item.name | upper }}_OUTPUT_DROP_LOG"

- name: "Firewall rule - create {{ item.name }} inbound chains"
  iptables_raw:
    name: "create-{{ item.name }}-inbound-chains"
    state: "{{ ((item.state == 'present') and (item.allow_inbound | bool) and (item.users | length > 0)) | ternary('present', 'absent') }}"
    weight: "{{ item.weight }}"
    rules: |
      -N {{ current_output_established_chain }}
  notify: Persist rules

- name: "Firewall rule - create {{ item.name }} outbound chains"
  iptables_raw:
    name: "create-{{ item.name }}-outbound-chains"
    state: "{{ ((item.state == 'present') and (item.allow_outbound | bool) and (item.users | length > 0)) | ternary('present', 'absent') }}"
    weight: "{{ item.weight }}"
    rules: |
      -N {{ current_output_new_chain }}
  notify: Persist rules

- name: "Set {{ item.name }} chains if user filtering is disabled"
  set_fact:
    current_output_established_chain: ACCEPT
    current_output_new_chain: "{{ current_output_accept_log_chain }}"
  when: item.users | length == 0

- name: "Firewall rule - filter established outbound {{ item.name }} traffic by user"
  iptables_raw:
    name: "filter-{{ item.name }}-established-outbound-user-{{ user }}"
    state: "{{ ((item.state == 'present') and (item.allow_inbound | bool)) | ternary('present', 'absent') }}"
    weight: "{{ item.weight }}"
    rules: |
      -A {{ current_output_established_chain }} -m owner --uid-owner {{ user }} -j ACCEPT
  loop: "{{ item.users }}"
  loop_control:
    loop_var: user
  notify: Persist rules

- name: "Firewall rule - create {{ item.name }} outbound accept logging chain"
  include_tasks: log_chain.yml
  loop:
    - name: "{{ item.name }}-outbound-accept-chain"
      rule_name: "logging-{{ item.name }}-outbound-accept-chain"
      state: "{{ (item.allow_outbound | bool) | ternary('present', 'absent') }}"
      chain_name: "{{ current_output_accept_log_chain }}"
      prefix: "{{ item.name | upper }}:OUTPUT:ACCEPT:"
      action: ACCEPT
  loop_control:
    loop_var: log_rule

- name: "Firewall rule - filter new outbound {{ item.name }} traffic by user"
  iptables_raw:
    name: "filter-{{ item.name }}-new-outbound-user-{{ user }}"
    state: "{{ ((item.state == 'present') and (item.allow_outbound | bool)) | ternary('present', 'absent') }}"
    weight: "{{ item.weight }}"
    rules: |
      -A {{ current_output_new_chain }} -m owner --uid-owner {{ user }} -m state --state NEW -j {{ current_output_accept_log_chain }}
      -A {{ current_output_new_chain }} -m owner --uid-owner {{ user }} -m state --state ESTABLISHED,RELATED -j ACCEPT
  loop: "{{ item.users }}"
  loop_control:
    loop_var: user
  notify: Persist rules

- name: Firewall rule - allow TCP to close connections for {{ item.name }} inbound traffic
  iptables_raw:
    name: "allow-{{ item.name }}-inbound-closed"
    state: "{{ ((item.state == 'present') and (item.allow_inbound | bool) and (item.users | length > 0) and (item.proto | lower == 'tcp')) | ternary('present', 'absent') }}"
    weight: "{{ item.weight | int + 1 }}"
    rules: |
      -A {{ current_output_established_chain }} -m owner ! --socket-exists -j ACCEPT
  notify: Persist rules

- name: Firewall rule - allow TCP to close connections for {{ item.name }} outbound traffic
  iptables_raw:
    name: "allow-{{ item.name }}-outbound-closed"
    state: "{{ ((item.state == 'present') and (item.allow_outbound | bool) and (item.users | length > 0) and (item.proto | lower == 'tcp')) | ternary('present', 'absent') }}"
    weight: "{{ item.weight | int + 1 }}"
    rules: |
      -A {{ current_output_new_chain }} -m owner ! --socket-exists -j ACCEPT
  notify: Persist rules

- name: "Firewall rule - create {{ item.name }} outbound drop logging chain"
  include_tasks: log_chain.yml
  loop:
    - name: "{{ item.name }}-outbound-drop-chain"
      rule_name: "logging-{{ item.name }}-outbound-drop-chain"
      state: "{{ ((item.state == 'present') and (item.users | length > 0)) | ternary('present', 'absent') }}"
      chain_name: "{{ current_output_drop_log_chain }}"
      prefix: "{{ item.name | upper }}:OUTPUT:DROP:"
      action: DROP
  loop_control:
    loop_var: log_rule

- name: Firewall rule - log dropped {{ item.name }} established outbound traffic
  iptables_raw:
    name: "log-{{ item.name }}-established-oubound-dropped"
    state: "{{ ((item.state == 'present') and (item.allow_inbound | bool) and (item.users | length > 0)) | ternary('present', 'absent') }}"
    weight: "{{ item.weight | int + 2 }}"
    rules: |
      -A {{ current_output_established_chain }} -j {{ current_output_drop_log_chain }}
  notify: Persist rules

- name: Firewall rule - log dropped {{ item.name }} new outbound traffic
  iptables_raw:
    name: "log-{{ item.name }}-new-oubound-dropped"
    state: "{{ ((item.state == 'present') and (item.allow_outbound | bool) and (item.users | length > 0)) | ternary('present', 'absent') }}"
    weight: "{{ item.weight | int + 2 }}"
    rules: |
      -A {{ current_output_new_chain }} -j {{ current_output_drop_log_chain }}
  notify: Persist rules

- name: "Firewall rule - create {{ item.name }} inbound accept logging chain"
  include_tasks: log_chain.yml
  loop:
    - name: "{{ item.name }}-inbound-accept-chain"
      rule_name: "logging-{{ item.name }}-inbound-accept-chain"
      state: "{{ (item.allow_inbound | bool) | ternary('present', 'absent') }}"
      chain_name: "{{ current_input_accept_log_chain }}"
      prefix: "{{ item.name | upper }}:INPUT:ACCEPT:"
      action: ACCEPT
  loop_control:
    loop_var: log_rule

- name: "Firewall rule - allow {{ item.name }} inbound"
  iptables_raw:
    name: "allow-{{ item.name }}-inbound"
    state: "{{ ((item.state == 'present') and (item.allow_inbound | bool)) | ternary('present', 'absent') }}"
    weight: "{{ item.weight }}"
    rules: |
      -A INPUT -p {{ item.proto }} --dport {{ item.inbound_port }} -m state --state NEW -j {{ current_input_accept_log_chain }}
      -A INPUT -p {{ item.proto }} --dport {{ item.inbound_port }} -m state --state ESTABLISHED,RELATED -j ACCEPT
      -A OUTPUT -p {{ item.proto }} --sport {{ item.inbound_port }} -m state --state ESTABLISHED,RELATED -j {{ current_output_established_chain }}
  notify: Persist rules

- name: "Firewall rule - allow {{ item.name }} outbound"
  iptables_raw:
    name: "allow-{{ item.name }}-outbound"
    state: "{{ ((item.state == 'present') and (item.allow_outbound | bool)) | ternary('present', 'absent') }}"
    weight: "{{ item.weight }}"
    rules: |
      -A OUTPUT -p {{ item.proto }} -m multiport --dports {{ item.outbound_ports }} -j {{ current_output_new_chain }}
      -A INPUT -p {{ item.proto }} -m multiport --sports {{ item.outbound_ports }} -m state --state ESTABLISHED,RELATED -j ACCEPT
  notify: Persist rules